{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelagredano/qr-code-generator/src/components/QRCodeGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [text, setText] = useState('');\n  const qrRef = useRef();\n  const downloadQRCode = () => {\n    const canvas = qrRef.current.querySelector('canvas');\n    const url = canvas.toDataURL('image/png');\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'qr-code.png';\n    a.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter text or URL\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      style: {\n        width: '300px',\n        padding: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      ref: qrRef,\n      children: text && /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: text,\n        size: 256\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadQRCode,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer'\n      },\n      children: \"Download QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"VDuGsUBOlww/cle2Rq1ynr8YnYw=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","useRef","QRCodeCanvas","jsxDEV","_jsxDEV","QRCodeGenerator","_s","text","setText","qrRef","downloadQRCode","canvas","current","querySelector","url","toDataURL","a","document","createElement","href","download","click","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","padding","ref","size","onClick","fontSize","cursor","_c","$RefreshReg$"],"sources":["/Users/rafaelagredano/qr-code-generator/src/components/QRCodeGenerator.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\n\nconst QRCodeGenerator = () => {\n  const [text, setText] = useState('');\n  const qrRef = useRef();\n\n  const downloadQRCode = () => {\n    const canvas = qrRef.current.querySelector('canvas');\n    const url = canvas.toDataURL('image/png');\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'qr-code.png';\n    a.click();\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <h1>QR Code Generator</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter text or URL\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        style={{ width: '300px', padding: '10px' }}\n      />\n\n      <div style={{ marginTop: '20px' }} ref={qrRef}>\n        {text && <QRCodeCanvas value={text} size={256} />}\n      </div>\n\n      {text && (\n        <button\n          onClick={downloadQRCode}\n          style={{\n            marginTop: '20px',\n            padding: '10px 20px',\n            fontSize: '16px',\n            cursor: 'pointer',\n          }}\n        >\n          Download QR Code\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,KAAK,GAAGR,MAAM,CAAC,CAAC;EAEtB,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAGF,KAAK,CAACG,OAAO,CAACC,aAAa,CAAC,QAAQ,CAAC;IACpD,MAAMC,GAAG,GAAGH,MAAM,CAACI,SAAS,CAAC,WAAW,CAAC;IAEzC,MAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGL,GAAG;IACZE,CAAC,CAACI,QAAQ,GAAG,aAAa;IAC1BJ,CAAC,CAACK,KAAK,CAAC,CAAC;EACX,CAAC;EAED,oBACEjB,OAAA;IAAKkB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDrB,OAAA;MAAAqB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEzB,IAAK;MACZ0B,QAAQ,EAAGC,CAAC,IAAK1B,OAAO,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCV,KAAK,EAAE;QAAEc,KAAK,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEFzB,OAAA;MAAKkB,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAACc,GAAG,EAAE7B,KAAM;MAAAgB,QAAA,EAC3ClB,IAAI,iBAAIH,OAAA,CAACF,YAAY;QAAC8B,KAAK,EAAEzB,IAAK;QAACgC,IAAI,EAAE;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EAELtB,IAAI,iBACHH,OAAA;MACEoC,OAAO,EAAE9B,cAAe;MACxBY,KAAK,EAAE;QACLE,SAAS,EAAE,MAAM;QACjBa,OAAO,EAAE,WAAW;QACpBI,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE;MACV,CAAE;MAAAjB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5CID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}